/* eslint-disable */
"use strict";

// external tooling

var resolve = require("resolve");

var moduleDirectories = ["web_modules", "node_modules"];

function resolveModule(id, opts) {
  return new Promise(function (res, rej) {
    resolve(id, opts, function (err, path) {
      return err ? rej(err) : res(path);
    });
  });
}

module.exports = function (id, base, options) {
  var paths = options.path;

  var resolveOpts = {
    basedir: base,
    moduleDirectory: moduleDirectories.concat(options.addModulesDirectories),
    paths: paths,
    extensions: [".css"],
    packageFilter: function processPackage(pkg) {
      if (pkg.style) pkg.main = pkg.style;else if (!pkg.main || !/\.css$/.test(pkg.main)) pkg.main = "index.css";
      return pkg;
    },
    preserveSymlinks: false
  };

  return resolveModule("./" + id, resolveOpts).catch(function () {
    return resolveModule(id, resolveOpts);
  }).catch(function () {
    if (paths.indexOf(base) === -1) paths.unshift(base);

    throw new Error("Failed to find '" + id + "'\n  in [\n    " + paths.join(",\n        ") + "\n  ]");
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wb3N0Y3NzLWltcG9ydC9saWIvcmVzb2x2ZS1pZC5qcyJdLCJuYW1lcyI6WyJyZXNvbHZlIiwicmVxdWlyZSIsIm1vZHVsZURpcmVjdG9yaWVzIiwicmVzb2x2ZU1vZHVsZSIsImlkIiwib3B0cyIsIlByb21pc2UiLCJyZXMiLCJyZWoiLCJlcnIiLCJwYXRoIiwibW9kdWxlIiwiZXhwb3J0cyIsImJhc2UiLCJvcHRpb25zIiwicGF0aHMiLCJyZXNvbHZlT3B0cyIsImJhc2VkaXIiLCJtb2R1bGVEaXJlY3RvcnkiLCJjb25jYXQiLCJhZGRNb2R1bGVzRGlyZWN0b3JpZXMiLCJleHRlbnNpb25zIiwicGFja2FnZUZpbHRlciIsInByb2Nlc3NQYWNrYWdlIiwicGtnIiwic3R5bGUiLCJtYWluIiwidGVzdCIsInByZXNlcnZlU3ltbGlua3MiLCJjYXRjaCIsImluZGV4T2YiLCJ1bnNoaWZ0IiwiRXJyb3IiLCJqb2luIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBOztBQUNBLElBQU1BLFVBQVVDLFFBQVEsU0FBUixDQUFoQjs7QUFFQSxJQUFNQyxvQkFBb0IsQ0FBQyxhQUFELEVBQWdCLGNBQWhCLENBQTFCOztBQUVBLFNBQVNDLGFBQVQsQ0FBdUJDLEVBQXZCLEVBQTJCQyxJQUEzQixFQUFpQztBQUMvQixTQUFPLElBQUlDLE9BQUosQ0FBWSxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUMvQlIsWUFBUUksRUFBUixFQUFZQyxJQUFaLEVBQWtCLFVBQUNJLEdBQUQsRUFBTUMsSUFBTjtBQUFBLGFBQWdCRCxNQUFNRCxJQUFJQyxHQUFKLENBQU4sR0FBaUJGLElBQUlHLElBQUosQ0FBakM7QUFBQSxLQUFsQjtBQUNELEdBRk0sQ0FBUDtBQUdEOztBQUVEQyxPQUFPQyxPQUFQLEdBQWlCLFVBQVNSLEVBQVQsRUFBYVMsSUFBYixFQUFtQkMsT0FBbkIsRUFBNEI7QUFDM0MsTUFBTUMsUUFBUUQsUUFBUUosSUFBdEI7O0FBRUEsTUFBTU0sY0FBYztBQUNsQkMsYUFBU0osSUFEUztBQUVsQksscUJBQWlCaEIsa0JBQWtCaUIsTUFBbEIsQ0FBeUJMLFFBQVFNLHFCQUFqQyxDQUZDO0FBR2xCTCxXQUFPQSxLQUhXO0FBSWxCTSxnQkFBWSxDQUFDLE1BQUQsQ0FKTTtBQUtsQkMsbUJBQWUsU0FBU0MsY0FBVCxDQUF3QkMsR0FBeEIsRUFBNkI7QUFDMUMsVUFBSUEsSUFBSUMsS0FBUixFQUFlRCxJQUFJRSxJQUFKLEdBQVdGLElBQUlDLEtBQWYsQ0FBZixLQUNLLElBQUksQ0FBQ0QsSUFBSUUsSUFBTCxJQUFhLENBQUMsU0FBU0MsSUFBVCxDQUFjSCxJQUFJRSxJQUFsQixDQUFsQixFQUEyQ0YsSUFBSUUsSUFBSixHQUFXLFdBQVg7QUFDaEQsYUFBT0YsR0FBUDtBQUNELEtBVGlCO0FBVWxCSSxzQkFBa0I7QUFWQSxHQUFwQjs7QUFhQSxTQUFPekIscUJBQW1CQyxFQUFuQixFQUF5QlksV0FBekIsRUFDSmEsS0FESSxDQUNFO0FBQUEsV0FBTTFCLGNBQWNDLEVBQWQsRUFBa0JZLFdBQWxCLENBQU47QUFBQSxHQURGLEVBRUphLEtBRkksQ0FFRSxZQUFNO0FBQ1gsUUFBSWQsTUFBTWUsT0FBTixDQUFjakIsSUFBZCxNQUF3QixDQUFDLENBQTdCLEVBQWdDRSxNQUFNZ0IsT0FBTixDQUFjbEIsSUFBZDs7QUFFaEMsVUFBTSxJQUFJbUIsS0FBSixzQkFDZTVCLEVBRGYsdUJBR05XLE1BQU1rQixJQUFOLENBQVcsYUFBWCxDQUhNLFdBQU47QUFNRCxHQVhJLENBQVA7QUFZRCxDQTVCRCIsImZpbGUiOiJyZXNvbHZlLWlkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgKi9cblwidXNlIHN0cmljdFwiXG5cbi8vIGV4dGVybmFsIHRvb2xpbmdcbmNvbnN0IHJlc29sdmUgPSByZXF1aXJlKFwicmVzb2x2ZVwiKVxuXG5jb25zdCBtb2R1bGVEaXJlY3RvcmllcyA9IFtcIndlYl9tb2R1bGVzXCIsIFwibm9kZV9tb2R1bGVzXCJdXG5cbmZ1bmN0aW9uIHJlc29sdmVNb2R1bGUoaWQsIG9wdHMpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXMsIHJlaikgPT4ge1xuICAgIHJlc29sdmUoaWQsIG9wdHMsIChlcnIsIHBhdGgpID0+IChlcnIgPyByZWooZXJyKSA6IHJlcyhwYXRoKSkpXG4gIH0pXG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaWQsIGJhc2UsIG9wdGlvbnMpIHtcbiAgY29uc3QgcGF0aHMgPSBvcHRpb25zLnBhdGhcblxuICBjb25zdCByZXNvbHZlT3B0cyA9IHtcbiAgICBiYXNlZGlyOiBiYXNlLFxuICAgIG1vZHVsZURpcmVjdG9yeTogbW9kdWxlRGlyZWN0b3JpZXMuY29uY2F0KG9wdGlvbnMuYWRkTW9kdWxlc0RpcmVjdG9yaWVzKSxcbiAgICBwYXRoczogcGF0aHMsXG4gICAgZXh0ZW5zaW9uczogW1wiLmNzc1wiXSxcbiAgICBwYWNrYWdlRmlsdGVyOiBmdW5jdGlvbiBwcm9jZXNzUGFja2FnZShwa2cpIHtcbiAgICAgIGlmIChwa2cuc3R5bGUpIHBrZy5tYWluID0gcGtnLnN0eWxlXG4gICAgICBlbHNlIGlmICghcGtnLm1haW4gfHwgIS9cXC5jc3MkLy50ZXN0KHBrZy5tYWluKSkgcGtnLm1haW4gPSBcImluZGV4LmNzc1wiXG4gICAgICByZXR1cm4gcGtnXG4gICAgfSxcbiAgICBwcmVzZXJ2ZVN5bWxpbmtzOiBmYWxzZSxcbiAgfVxuXG4gIHJldHVybiByZXNvbHZlTW9kdWxlKGAuLyR7aWR9YCwgcmVzb2x2ZU9wdHMpXG4gICAgLmNhdGNoKCgpID0+IHJlc29sdmVNb2R1bGUoaWQsIHJlc29sdmVPcHRzKSlcbiAgICAuY2F0Y2goKCkgPT4ge1xuICAgICAgaWYgKHBhdGhzLmluZGV4T2YoYmFzZSkgPT09IC0xKSBwYXRocy51bnNoaWZ0KGJhc2UpXG5cbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYEZhaWxlZCB0byBmaW5kICcke2lkfSdcbiAgaW4gW1xuICAgICR7cGF0aHMuam9pbihcIixcXG4gICAgICAgIFwiKX1cbiAgXWBcbiAgICAgIClcbiAgICB9KVxufSJdfQ==